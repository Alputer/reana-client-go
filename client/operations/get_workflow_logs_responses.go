// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetWorkflowLogsReader is a Reader for the GetWorkflowLogs structure.
type GetWorkflowLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkflowLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkflowLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/workflows/{workflow_id_or_name}/logs] get_workflow_logs", response, response.Code())
	}
}

// NewGetWorkflowLogsOK creates a GetWorkflowLogsOK with default headers values
func NewGetWorkflowLogsOK() *GetWorkflowLogsOK {
	return &GetWorkflowLogsOK{}
}

/*
GetWorkflowLogsOK describes a response with status code 200, with default header values.

Request succeeded. Info about a workflow, including the status is returned.
*/
type GetWorkflowLogsOK struct {
	Payload *GetWorkflowLogsOKBody
}

// IsSuccess returns true when this get workflow logs o k response has a 2xx status code
func (o *GetWorkflowLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow logs o k response has a 3xx status code
func (o *GetWorkflowLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow logs o k response has a 4xx status code
func (o *GetWorkflowLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow logs o k response has a 5xx status code
func (o *GetWorkflowLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow logs o k response a status code equal to that given
func (o *GetWorkflowLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow logs o k response
func (o *GetWorkflowLogsOK) Code() int {
	return 200
}

func (o *GetWorkflowLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsOK %s", 200, payload)
}

func (o *GetWorkflowLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsOK %s", 200, payload)
}

func (o *GetWorkflowLogsOK) GetPayload() *GetWorkflowLogsOKBody {
	return o.Payload
}

func (o *GetWorkflowLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowLogsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowLogsBadRequest creates a GetWorkflowLogsBadRequest with default headers values
func NewGetWorkflowLogsBadRequest() *GetWorkflowLogsBadRequest {
	return &GetWorkflowLogsBadRequest{}
}

/*
GetWorkflowLogsBadRequest describes a response with status code 400, with default header values.

Request failed. The incoming data specification seems malformed.
*/
type GetWorkflowLogsBadRequest struct {
	Payload *GetWorkflowLogsBadRequestBody
}

// IsSuccess returns true when this get workflow logs bad request response has a 2xx status code
func (o *GetWorkflowLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow logs bad request response has a 3xx status code
func (o *GetWorkflowLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow logs bad request response has a 4xx status code
func (o *GetWorkflowLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow logs bad request response has a 5xx status code
func (o *GetWorkflowLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow logs bad request response a status code equal to that given
func (o *GetWorkflowLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get workflow logs bad request response
func (o *GetWorkflowLogsBadRequest) Code() int {
	return 400
}

func (o *GetWorkflowLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsBadRequest %s", 400, payload)
}

func (o *GetWorkflowLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsBadRequest %s", 400, payload)
}

func (o *GetWorkflowLogsBadRequest) GetPayload() *GetWorkflowLogsBadRequestBody {
	return o.Payload
}

func (o *GetWorkflowLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowLogsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowLogsForbidden creates a GetWorkflowLogsForbidden with default headers values
func NewGetWorkflowLogsForbidden() *GetWorkflowLogsForbidden {
	return &GetWorkflowLogsForbidden{}
}

/*
GetWorkflowLogsForbidden describes a response with status code 403, with default header values.

Request failed. User is not allowed to access workflow.
*/
type GetWorkflowLogsForbidden struct {
	Payload *GetWorkflowLogsForbiddenBody
}

// IsSuccess returns true when this get workflow logs forbidden response has a 2xx status code
func (o *GetWorkflowLogsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow logs forbidden response has a 3xx status code
func (o *GetWorkflowLogsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow logs forbidden response has a 4xx status code
func (o *GetWorkflowLogsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow logs forbidden response has a 5xx status code
func (o *GetWorkflowLogsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow logs forbidden response a status code equal to that given
func (o *GetWorkflowLogsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workflow logs forbidden response
func (o *GetWorkflowLogsForbidden) Code() int {
	return 403
}

func (o *GetWorkflowLogsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsForbidden %s", 403, payload)
}

func (o *GetWorkflowLogsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsForbidden %s", 403, payload)
}

func (o *GetWorkflowLogsForbidden) GetPayload() *GetWorkflowLogsForbiddenBody {
	return o.Payload
}

func (o *GetWorkflowLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowLogsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowLogsNotFound creates a GetWorkflowLogsNotFound with default headers values
func NewGetWorkflowLogsNotFound() *GetWorkflowLogsNotFound {
	return &GetWorkflowLogsNotFound{}
}

/*
GetWorkflowLogsNotFound describes a response with status code 404, with default header values.

Request failed. User does not exist.
*/
type GetWorkflowLogsNotFound struct {
	Payload *GetWorkflowLogsNotFoundBody
}

// IsSuccess returns true when this get workflow logs not found response has a 2xx status code
func (o *GetWorkflowLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow logs not found response has a 3xx status code
func (o *GetWorkflowLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow logs not found response has a 4xx status code
func (o *GetWorkflowLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow logs not found response has a 5xx status code
func (o *GetWorkflowLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow logs not found response a status code equal to that given
func (o *GetWorkflowLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow logs not found response
func (o *GetWorkflowLogsNotFound) Code() int {
	return 404
}

func (o *GetWorkflowLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsNotFound %s", 404, payload)
}

func (o *GetWorkflowLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsNotFound %s", 404, payload)
}

func (o *GetWorkflowLogsNotFound) GetPayload() *GetWorkflowLogsNotFoundBody {
	return o.Payload
}

func (o *GetWorkflowLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowLogsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowLogsInternalServerError creates a GetWorkflowLogsInternalServerError with default headers values
func NewGetWorkflowLogsInternalServerError() *GetWorkflowLogsInternalServerError {
	return &GetWorkflowLogsInternalServerError{}
}

/*
GetWorkflowLogsInternalServerError describes a response with status code 500, with default header values.

Request failed. Internal controller error.
*/
type GetWorkflowLogsInternalServerError struct {
	Payload *GetWorkflowLogsInternalServerErrorBody
}

// IsSuccess returns true when this get workflow logs internal server error response has a 2xx status code
func (o *GetWorkflowLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow logs internal server error response has a 3xx status code
func (o *GetWorkflowLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow logs internal server error response has a 4xx status code
func (o *GetWorkflowLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow logs internal server error response has a 5xx status code
func (o *GetWorkflowLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workflow logs internal server error response a status code equal to that given
func (o *GetWorkflowLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get workflow logs internal server error response
func (o *GetWorkflowLogsInternalServerError) Code() int {
	return 500
}

func (o *GetWorkflowLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsInternalServerError %s", 500, payload)
}

func (o *GetWorkflowLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/logs][%d] getWorkflowLogsInternalServerError %s", 500, payload)
}

func (o *GetWorkflowLogsInternalServerError) GetPayload() *GetWorkflowLogsInternalServerErrorBody {
	return o.Payload
}

func (o *GetWorkflowLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowLogsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetWorkflowLogsBadRequestBody get workflow logs bad request body
swagger:model GetWorkflowLogsBadRequestBody
*/
type GetWorkflowLogsBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow logs bad request body
func (o *GetWorkflowLogsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow logs bad request body based on context it is used
func (o *GetWorkflowLogsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowLogsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowLogsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowLogsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowLogsForbiddenBody get workflow logs forbidden body
swagger:model GetWorkflowLogsForbiddenBody
*/
type GetWorkflowLogsForbiddenBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow logs forbidden body
func (o *GetWorkflowLogsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow logs forbidden body based on context it is used
func (o *GetWorkflowLogsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowLogsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowLogsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowLogsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowLogsInternalServerErrorBody get workflow logs internal server error body
swagger:model GetWorkflowLogsInternalServerErrorBody
*/
type GetWorkflowLogsInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow logs internal server error body
func (o *GetWorkflowLogsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow logs internal server error body based on context it is used
func (o *GetWorkflowLogsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowLogsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowLogsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowLogsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowLogsNotFoundBody get workflow logs not found body
swagger:model GetWorkflowLogsNotFoundBody
*/
type GetWorkflowLogsNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow logs not found body
func (o *GetWorkflowLogsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow logs not found body based on context it is used
func (o *GetWorkflowLogsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowLogsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowLogsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowLogsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowLogsOKBody get workflow logs o k body
swagger:model GetWorkflowLogsOKBody
*/
type GetWorkflowLogsOKBody struct {

	// live logs enabled
	LiveLogsEnabled bool `json:"live_logs_enabled,omitempty"`

	// logs
	Logs string `json:"logs,omitempty"`

	// user
	User string `json:"user,omitempty"`

	// workflow id
	WorkflowID string `json:"workflow_id,omitempty"`

	// workflow name
	WorkflowName string `json:"workflow_name,omitempty"`
}

// Validate validates this get workflow logs o k body
func (o *GetWorkflowLogsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow logs o k body based on context it is used
func (o *GetWorkflowLogsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowLogsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowLogsOKBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowLogsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
