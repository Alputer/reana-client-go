// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetWorkflowParametersReader is a Reader for the GetWorkflowParameters structure.
type GetWorkflowParametersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowParametersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowParametersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkflowParametersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkflowParametersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowParametersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowParametersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/workflows/{workflow_id_or_name}/parameters] get_workflow_parameters", response, response.Code())
	}
}

// NewGetWorkflowParametersOK creates a GetWorkflowParametersOK with default headers values
func NewGetWorkflowParametersOK() *GetWorkflowParametersOK {
	return &GetWorkflowParametersOK{}
}

/*
GetWorkflowParametersOK describes a response with status code 200, with default header values.

Request succeeded. Workflow input parameters, including the status are returned.
*/
type GetWorkflowParametersOK struct {
	Payload *GetWorkflowParametersOKBody
}

// IsSuccess returns true when this get workflow parameters o k response has a 2xx status code
func (o *GetWorkflowParametersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow parameters o k response has a 3xx status code
func (o *GetWorkflowParametersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow parameters o k response has a 4xx status code
func (o *GetWorkflowParametersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow parameters o k response has a 5xx status code
func (o *GetWorkflowParametersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow parameters o k response a status code equal to that given
func (o *GetWorkflowParametersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow parameters o k response
func (o *GetWorkflowParametersOK) Code() int {
	return 200
}

func (o *GetWorkflowParametersOK) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowParametersOK) String() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowParametersOK) GetPayload() *GetWorkflowParametersOKBody {
	return o.Payload
}

func (o *GetWorkflowParametersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowParametersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowParametersBadRequest creates a GetWorkflowParametersBadRequest with default headers values
func NewGetWorkflowParametersBadRequest() *GetWorkflowParametersBadRequest {
	return &GetWorkflowParametersBadRequest{}
}

/*
GetWorkflowParametersBadRequest describes a response with status code 400, with default header values.

Request failed. The incoming payload seems malformed.
*/
type GetWorkflowParametersBadRequest struct {
	Payload *GetWorkflowParametersBadRequestBody
}

// IsSuccess returns true when this get workflow parameters bad request response has a 2xx status code
func (o *GetWorkflowParametersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow parameters bad request response has a 3xx status code
func (o *GetWorkflowParametersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow parameters bad request response has a 4xx status code
func (o *GetWorkflowParametersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow parameters bad request response has a 5xx status code
func (o *GetWorkflowParametersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow parameters bad request response a status code equal to that given
func (o *GetWorkflowParametersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get workflow parameters bad request response
func (o *GetWorkflowParametersBadRequest) Code() int {
	return 400
}

func (o *GetWorkflowParametersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkflowParametersBadRequest) String() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkflowParametersBadRequest) GetPayload() *GetWorkflowParametersBadRequestBody {
	return o.Payload
}

func (o *GetWorkflowParametersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowParametersBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowParametersForbidden creates a GetWorkflowParametersForbidden with default headers values
func NewGetWorkflowParametersForbidden() *GetWorkflowParametersForbidden {
	return &GetWorkflowParametersForbidden{}
}

/*
GetWorkflowParametersForbidden describes a response with status code 403, with default header values.

Request failed. User is not allowed to access workflow.
*/
type GetWorkflowParametersForbidden struct {
	Payload *GetWorkflowParametersForbiddenBody
}

// IsSuccess returns true when this get workflow parameters forbidden response has a 2xx status code
func (o *GetWorkflowParametersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow parameters forbidden response has a 3xx status code
func (o *GetWorkflowParametersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow parameters forbidden response has a 4xx status code
func (o *GetWorkflowParametersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow parameters forbidden response has a 5xx status code
func (o *GetWorkflowParametersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow parameters forbidden response a status code equal to that given
func (o *GetWorkflowParametersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workflow parameters forbidden response
func (o *GetWorkflowParametersForbidden) Code() int {
	return 403
}

func (o *GetWorkflowParametersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkflowParametersForbidden) String() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkflowParametersForbidden) GetPayload() *GetWorkflowParametersForbiddenBody {
	return o.Payload
}

func (o *GetWorkflowParametersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowParametersForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowParametersNotFound creates a GetWorkflowParametersNotFound with default headers values
func NewGetWorkflowParametersNotFound() *GetWorkflowParametersNotFound {
	return &GetWorkflowParametersNotFound{}
}

/*
GetWorkflowParametersNotFound describes a response with status code 404, with default header values.

Request failed. Either User or Analysis does not exist.
*/
type GetWorkflowParametersNotFound struct {
	Payload *GetWorkflowParametersNotFoundBody
}

// IsSuccess returns true when this get workflow parameters not found response has a 2xx status code
func (o *GetWorkflowParametersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow parameters not found response has a 3xx status code
func (o *GetWorkflowParametersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow parameters not found response has a 4xx status code
func (o *GetWorkflowParametersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow parameters not found response has a 5xx status code
func (o *GetWorkflowParametersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow parameters not found response a status code equal to that given
func (o *GetWorkflowParametersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow parameters not found response
func (o *GetWorkflowParametersNotFound) Code() int {
	return 404
}

func (o *GetWorkflowParametersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowParametersNotFound) String() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowParametersNotFound) GetPayload() *GetWorkflowParametersNotFoundBody {
	return o.Payload
}

func (o *GetWorkflowParametersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowParametersNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowParametersInternalServerError creates a GetWorkflowParametersInternalServerError with default headers values
func NewGetWorkflowParametersInternalServerError() *GetWorkflowParametersInternalServerError {
	return &GetWorkflowParametersInternalServerError{}
}

/*
GetWorkflowParametersInternalServerError describes a response with status code 500, with default header values.

Request failed. Internal controller error.
*/
type GetWorkflowParametersInternalServerError struct {
	Payload *GetWorkflowParametersInternalServerErrorBody
}

// IsSuccess returns true when this get workflow parameters internal server error response has a 2xx status code
func (o *GetWorkflowParametersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow parameters internal server error response has a 3xx status code
func (o *GetWorkflowParametersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow parameters internal server error response has a 4xx status code
func (o *GetWorkflowParametersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow parameters internal server error response has a 5xx status code
func (o *GetWorkflowParametersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workflow parameters internal server error response a status code equal to that given
func (o *GetWorkflowParametersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get workflow parameters internal server error response
func (o *GetWorkflowParametersInternalServerError) Code() int {
	return 500
}

func (o *GetWorkflowParametersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowParametersInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/parameters][%d] getWorkflowParametersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowParametersInternalServerError) GetPayload() *GetWorkflowParametersInternalServerErrorBody {
	return o.Payload
}

func (o *GetWorkflowParametersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowParametersInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetWorkflowParametersBadRequestBody get workflow parameters bad request body
swagger:model GetWorkflowParametersBadRequestBody
*/
type GetWorkflowParametersBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow parameters bad request body
func (o *GetWorkflowParametersBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow parameters bad request body based on context it is used
func (o *GetWorkflowParametersBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowParametersBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowParametersBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowParametersBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowParametersForbiddenBody get workflow parameters forbidden body
swagger:model GetWorkflowParametersForbiddenBody
*/
type GetWorkflowParametersForbiddenBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow parameters forbidden body
func (o *GetWorkflowParametersForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow parameters forbidden body based on context it is used
func (o *GetWorkflowParametersForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowParametersForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowParametersForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowParametersForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowParametersInternalServerErrorBody get workflow parameters internal server error body
swagger:model GetWorkflowParametersInternalServerErrorBody
*/
type GetWorkflowParametersInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow parameters internal server error body
func (o *GetWorkflowParametersInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow parameters internal server error body based on context it is used
func (o *GetWorkflowParametersInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowParametersInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowParametersInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowParametersInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowParametersNotFoundBody get workflow parameters not found body
swagger:model GetWorkflowParametersNotFoundBody
*/
type GetWorkflowParametersNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get workflow parameters not found body
func (o *GetWorkflowParametersNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow parameters not found body based on context it is used
func (o *GetWorkflowParametersNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowParametersNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowParametersNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowParametersNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetWorkflowParametersOKBody get workflow parameters o k body
swagger:model GetWorkflowParametersOKBody
*/
type GetWorkflowParametersOKBody struct {

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// parameters
	//
	// Min Properties: 0
	// Min Properties: 0
	Parameters map[string]interface{} `json:"parameters,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this get workflow parameters o k body
func (o *GetWorkflowParametersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParameters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetWorkflowParametersOKBody) validateParameters(formats strfmt.Registry) error {
	if swag.IsZero(o.Parameters) { // not required
		return nil
	}

	nprops := len(o.Parameters)

	// minProperties: 0
	if nprops < 0 {
		return errors.TooFewProperties("getWorkflowParametersOK"+"."+"parameters", "body", 0)
	}

	return nil
}

// ContextValidate validates this get workflow parameters o k body based on context it is used
func (o *GetWorkflowParametersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowParametersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowParametersOKBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowParametersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
