// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UnshareWorkflowReader is a Reader for the UnshareWorkflow structure.
type UnshareWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnshareWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnshareWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnshareWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUnshareWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUnshareWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUnshareWorkflowConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnshareWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/workflows/{workflow_id_or_name}/unshare] unshare_workflow", response, response.Code())
	}
}

// NewUnshareWorkflowOK creates a UnshareWorkflowOK with default headers values
func NewUnshareWorkflowOK() *UnshareWorkflowOK {
	return &UnshareWorkflowOK{}
}

/*
UnshareWorkflowOK describes a response with status code 200, with default header values.

Request succeeded. The workflow has been unshared with the user.
*/
type UnshareWorkflowOK struct {
	Payload *UnshareWorkflowOKBody
}

// IsSuccess returns true when this unshare workflow o k response has a 2xx status code
func (o *UnshareWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this unshare workflow o k response has a 3xx status code
func (o *UnshareWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unshare workflow o k response has a 4xx status code
func (o *UnshareWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this unshare workflow o k response has a 5xx status code
func (o *UnshareWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this unshare workflow o k response a status code equal to that given
func (o *UnshareWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the unshare workflow o k response
func (o *UnshareWorkflowOK) Code() int {
	return 200
}

func (o *UnshareWorkflowOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowOK %s", 200, payload)
}

func (o *UnshareWorkflowOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowOK %s", 200, payload)
}

func (o *UnshareWorkflowOK) GetPayload() *UnshareWorkflowOKBody {
	return o.Payload
}

func (o *UnshareWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnshareWorkflowOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnshareWorkflowBadRequest creates a UnshareWorkflowBadRequest with default headers values
func NewUnshareWorkflowBadRequest() *UnshareWorkflowBadRequest {
	return &UnshareWorkflowBadRequest{}
}

/*
UnshareWorkflowBadRequest describes a response with status code 400, with default header values.

Request failed. The incoming data specification seems malformed.
*/
type UnshareWorkflowBadRequest struct {
	Payload *UnshareWorkflowBadRequestBody
}

// IsSuccess returns true when this unshare workflow bad request response has a 2xx status code
func (o *UnshareWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unshare workflow bad request response has a 3xx status code
func (o *UnshareWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unshare workflow bad request response has a 4xx status code
func (o *UnshareWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this unshare workflow bad request response has a 5xx status code
func (o *UnshareWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this unshare workflow bad request response a status code equal to that given
func (o *UnshareWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the unshare workflow bad request response
func (o *UnshareWorkflowBadRequest) Code() int {
	return 400
}

func (o *UnshareWorkflowBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowBadRequest %s", 400, payload)
}

func (o *UnshareWorkflowBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowBadRequest %s", 400, payload)
}

func (o *UnshareWorkflowBadRequest) GetPayload() *UnshareWorkflowBadRequestBody {
	return o.Payload
}

func (o *UnshareWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnshareWorkflowBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnshareWorkflowForbidden creates a UnshareWorkflowForbidden with default headers values
func NewUnshareWorkflowForbidden() *UnshareWorkflowForbidden {
	return &UnshareWorkflowForbidden{}
}

/*
UnshareWorkflowForbidden describes a response with status code 403, with default header values.

Request failed. User is not allowed to unshare the workflow.
*/
type UnshareWorkflowForbidden struct {
	Payload *UnshareWorkflowForbiddenBody
}

// IsSuccess returns true when this unshare workflow forbidden response has a 2xx status code
func (o *UnshareWorkflowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unshare workflow forbidden response has a 3xx status code
func (o *UnshareWorkflowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unshare workflow forbidden response has a 4xx status code
func (o *UnshareWorkflowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this unshare workflow forbidden response has a 5xx status code
func (o *UnshareWorkflowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this unshare workflow forbidden response a status code equal to that given
func (o *UnshareWorkflowForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the unshare workflow forbidden response
func (o *UnshareWorkflowForbidden) Code() int {
	return 403
}

func (o *UnshareWorkflowForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowForbidden %s", 403, payload)
}

func (o *UnshareWorkflowForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowForbidden %s", 403, payload)
}

func (o *UnshareWorkflowForbidden) GetPayload() *UnshareWorkflowForbiddenBody {
	return o.Payload
}

func (o *UnshareWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnshareWorkflowForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnshareWorkflowNotFound creates a UnshareWorkflowNotFound with default headers values
func NewUnshareWorkflowNotFound() *UnshareWorkflowNotFound {
	return &UnshareWorkflowNotFound{}
}

/*
UnshareWorkflowNotFound describes a response with status code 404, with default header values.

Request failed. Workflow does not exist or user does not exist.
*/
type UnshareWorkflowNotFound struct {
	Payload *UnshareWorkflowNotFoundBody
}

// IsSuccess returns true when this unshare workflow not found response has a 2xx status code
func (o *UnshareWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unshare workflow not found response has a 3xx status code
func (o *UnshareWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unshare workflow not found response has a 4xx status code
func (o *UnshareWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this unshare workflow not found response has a 5xx status code
func (o *UnshareWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this unshare workflow not found response a status code equal to that given
func (o *UnshareWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the unshare workflow not found response
func (o *UnshareWorkflowNotFound) Code() int {
	return 404
}

func (o *UnshareWorkflowNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowNotFound %s", 404, payload)
}

func (o *UnshareWorkflowNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowNotFound %s", 404, payload)
}

func (o *UnshareWorkflowNotFound) GetPayload() *UnshareWorkflowNotFoundBody {
	return o.Payload
}

func (o *UnshareWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnshareWorkflowNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnshareWorkflowConflict creates a UnshareWorkflowConflict with default headers values
func NewUnshareWorkflowConflict() *UnshareWorkflowConflict {
	return &UnshareWorkflowConflict{}
}

/*
UnshareWorkflowConflict describes a response with status code 409, with default header values.

Request failed. The workflow is not shared with the user.
*/
type UnshareWorkflowConflict struct {
	Payload *UnshareWorkflowConflictBody
}

// IsSuccess returns true when this unshare workflow conflict response has a 2xx status code
func (o *UnshareWorkflowConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unshare workflow conflict response has a 3xx status code
func (o *UnshareWorkflowConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unshare workflow conflict response has a 4xx status code
func (o *UnshareWorkflowConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this unshare workflow conflict response has a 5xx status code
func (o *UnshareWorkflowConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this unshare workflow conflict response a status code equal to that given
func (o *UnshareWorkflowConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the unshare workflow conflict response
func (o *UnshareWorkflowConflict) Code() int {
	return 409
}

func (o *UnshareWorkflowConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowConflict %s", 409, payload)
}

func (o *UnshareWorkflowConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowConflict %s", 409, payload)
}

func (o *UnshareWorkflowConflict) GetPayload() *UnshareWorkflowConflictBody {
	return o.Payload
}

func (o *UnshareWorkflowConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnshareWorkflowConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnshareWorkflowInternalServerError creates a UnshareWorkflowInternalServerError with default headers values
func NewUnshareWorkflowInternalServerError() *UnshareWorkflowInternalServerError {
	return &UnshareWorkflowInternalServerError{}
}

/*
UnshareWorkflowInternalServerError describes a response with status code 500, with default header values.

Request failed. Internal controller error.
*/
type UnshareWorkflowInternalServerError struct {
	Payload *UnshareWorkflowInternalServerErrorBody
}

// IsSuccess returns true when this unshare workflow internal server error response has a 2xx status code
func (o *UnshareWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unshare workflow internal server error response has a 3xx status code
func (o *UnshareWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unshare workflow internal server error response has a 4xx status code
func (o *UnshareWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this unshare workflow internal server error response has a 5xx status code
func (o *UnshareWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this unshare workflow internal server error response a status code equal to that given
func (o *UnshareWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the unshare workflow internal server error response
func (o *UnshareWorkflowInternalServerError) Code() int {
	return 500
}

func (o *UnshareWorkflowInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowInternalServerError %s", 500, payload)
}

func (o *UnshareWorkflowInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/{workflow_id_or_name}/unshare][%d] unshareWorkflowInternalServerError %s", 500, payload)
}

func (o *UnshareWorkflowInternalServerError) GetPayload() *UnshareWorkflowInternalServerErrorBody {
	return o.Payload
}

func (o *UnshareWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnshareWorkflowInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UnshareWorkflowBadRequestBody unshare workflow bad request body
swagger:model UnshareWorkflowBadRequestBody
*/
type UnshareWorkflowBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this unshare workflow bad request body
func (o *UnshareWorkflowBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unshare workflow bad request body based on context it is used
func (o *UnshareWorkflowBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnshareWorkflowBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnshareWorkflowBadRequestBody) UnmarshalBinary(b []byte) error {
	var res UnshareWorkflowBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UnshareWorkflowConflictBody unshare workflow conflict body
swagger:model UnshareWorkflowConflictBody
*/
type UnshareWorkflowConflictBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this unshare workflow conflict body
func (o *UnshareWorkflowConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unshare workflow conflict body based on context it is used
func (o *UnshareWorkflowConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnshareWorkflowConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnshareWorkflowConflictBody) UnmarshalBinary(b []byte) error {
	var res UnshareWorkflowConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UnshareWorkflowForbiddenBody unshare workflow forbidden body
swagger:model UnshareWorkflowForbiddenBody
*/
type UnshareWorkflowForbiddenBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this unshare workflow forbidden body
func (o *UnshareWorkflowForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unshare workflow forbidden body based on context it is used
func (o *UnshareWorkflowForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnshareWorkflowForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnshareWorkflowForbiddenBody) UnmarshalBinary(b []byte) error {
	var res UnshareWorkflowForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UnshareWorkflowInternalServerErrorBody unshare workflow internal server error body
swagger:model UnshareWorkflowInternalServerErrorBody
*/
type UnshareWorkflowInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this unshare workflow internal server error body
func (o *UnshareWorkflowInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unshare workflow internal server error body based on context it is used
func (o *UnshareWorkflowInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnshareWorkflowInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnshareWorkflowInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res UnshareWorkflowInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UnshareWorkflowNotFoundBody unshare workflow not found body
swagger:model UnshareWorkflowNotFoundBody
*/
type UnshareWorkflowNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this unshare workflow not found body
func (o *UnshareWorkflowNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unshare workflow not found body based on context it is used
func (o *UnshareWorkflowNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnshareWorkflowNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnshareWorkflowNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UnshareWorkflowNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UnshareWorkflowOKBody unshare workflow o k body
swagger:model UnshareWorkflowOKBody
*/
type UnshareWorkflowOKBody struct {

	// message
	Message string `json:"message,omitempty"`

	// workflow id
	WorkflowID string `json:"workflow_id,omitempty"`

	// workflow name
	WorkflowName string `json:"workflow_name,omitempty"`
}

// Validate validates this unshare workflow o k body
func (o *UnshareWorkflowOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this unshare workflow o k body based on context it is used
func (o *UnshareWorkflowOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UnshareWorkflowOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnshareWorkflowOKBody) UnmarshalBinary(b []byte) error {
	var res UnshareWorkflowOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
