// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetUsersYouSharedWithReader is a Reader for the GetUsersYouSharedWith structure.
type GetUsersYouSharedWithReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersYouSharedWithReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersYouSharedWithOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersYouSharedWithUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersYouSharedWithForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUsersYouSharedWithInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/users/you-shared-with] get_users_you_shared_with", response, response.Code())
	}
}

// NewGetUsersYouSharedWithOK creates a GetUsersYouSharedWithOK with default headers values
func NewGetUsersYouSharedWithOK() *GetUsersYouSharedWithOK {
	return &GetUsersYouSharedWithOK{}
}

/*
GetUsersYouSharedWithOK describes a response with status code 200, with default header values.

Users that the authenticated user shared workflow(s) with.
*/
type GetUsersYouSharedWithOK struct {
	Payload *GetUsersYouSharedWithOKBody
}

// IsSuccess returns true when this get users you shared with o k response has a 2xx status code
func (o *GetUsersYouSharedWithOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users you shared with o k response has a 3xx status code
func (o *GetUsersYouSharedWithOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users you shared with o k response has a 4xx status code
func (o *GetUsersYouSharedWithOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users you shared with o k response has a 5xx status code
func (o *GetUsersYouSharedWithOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users you shared with o k response a status code equal to that given
func (o *GetUsersYouSharedWithOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get users you shared with o k response
func (o *GetUsersYouSharedWithOK) Code() int {
	return 200
}

func (o *GetUsersYouSharedWithOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithOK %s", 200, payload)
}

func (o *GetUsersYouSharedWithOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithOK %s", 200, payload)
}

func (o *GetUsersYouSharedWithOK) GetPayload() *GetUsersYouSharedWithOKBody {
	return o.Payload
}

func (o *GetUsersYouSharedWithOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUsersYouSharedWithOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersYouSharedWithUnauthorized creates a GetUsersYouSharedWithUnauthorized with default headers values
func NewGetUsersYouSharedWithUnauthorized() *GetUsersYouSharedWithUnauthorized {
	return &GetUsersYouSharedWithUnauthorized{}
}

/*
GetUsersYouSharedWithUnauthorized describes a response with status code 401, with default header values.

Error message indicating that the uses is not authenticated.
*/
type GetUsersYouSharedWithUnauthorized struct {
	Payload *GetUsersYouSharedWithUnauthorizedBody
}

// IsSuccess returns true when this get users you shared with unauthorized response has a 2xx status code
func (o *GetUsersYouSharedWithUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users you shared with unauthorized response has a 3xx status code
func (o *GetUsersYouSharedWithUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users you shared with unauthorized response has a 4xx status code
func (o *GetUsersYouSharedWithUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users you shared with unauthorized response has a 5xx status code
func (o *GetUsersYouSharedWithUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get users you shared with unauthorized response a status code equal to that given
func (o *GetUsersYouSharedWithUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get users you shared with unauthorized response
func (o *GetUsersYouSharedWithUnauthorized) Code() int {
	return 401
}

func (o *GetUsersYouSharedWithUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithUnauthorized %s", 401, payload)
}

func (o *GetUsersYouSharedWithUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithUnauthorized %s", 401, payload)
}

func (o *GetUsersYouSharedWithUnauthorized) GetPayload() *GetUsersYouSharedWithUnauthorizedBody {
	return o.Payload
}

func (o *GetUsersYouSharedWithUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUsersYouSharedWithUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersYouSharedWithForbidden creates a GetUsersYouSharedWithForbidden with default headers values
func NewGetUsersYouSharedWithForbidden() *GetUsersYouSharedWithForbidden {
	return &GetUsersYouSharedWithForbidden{}
}

/*
GetUsersYouSharedWithForbidden describes a response with status code 403, with default header values.

Request failed. User token not valid.
*/
type GetUsersYouSharedWithForbidden struct {
	Payload *GetUsersYouSharedWithForbiddenBody
}

// IsSuccess returns true when this get users you shared with forbidden response has a 2xx status code
func (o *GetUsersYouSharedWithForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users you shared with forbidden response has a 3xx status code
func (o *GetUsersYouSharedWithForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users you shared with forbidden response has a 4xx status code
func (o *GetUsersYouSharedWithForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users you shared with forbidden response has a 5xx status code
func (o *GetUsersYouSharedWithForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get users you shared with forbidden response a status code equal to that given
func (o *GetUsersYouSharedWithForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get users you shared with forbidden response
func (o *GetUsersYouSharedWithForbidden) Code() int {
	return 403
}

func (o *GetUsersYouSharedWithForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithForbidden %s", 403, payload)
}

func (o *GetUsersYouSharedWithForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithForbidden %s", 403, payload)
}

func (o *GetUsersYouSharedWithForbidden) GetPayload() *GetUsersYouSharedWithForbiddenBody {
	return o.Payload
}

func (o *GetUsersYouSharedWithForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUsersYouSharedWithForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersYouSharedWithInternalServerError creates a GetUsersYouSharedWithInternalServerError with default headers values
func NewGetUsersYouSharedWithInternalServerError() *GetUsersYouSharedWithInternalServerError {
	return &GetUsersYouSharedWithInternalServerError{}
}

/*
GetUsersYouSharedWithInternalServerError describes a response with status code 500, with default header values.

Request failed. Internal server error.
*/
type GetUsersYouSharedWithInternalServerError struct {
	Payload *GetUsersYouSharedWithInternalServerErrorBody
}

// IsSuccess returns true when this get users you shared with internal server error response has a 2xx status code
func (o *GetUsersYouSharedWithInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users you shared with internal server error response has a 3xx status code
func (o *GetUsersYouSharedWithInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users you shared with internal server error response has a 4xx status code
func (o *GetUsersYouSharedWithInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users you shared with internal server error response has a 5xx status code
func (o *GetUsersYouSharedWithInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get users you shared with internal server error response a status code equal to that given
func (o *GetUsersYouSharedWithInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get users you shared with internal server error response
func (o *GetUsersYouSharedWithInternalServerError) Code() int {
	return 500
}

func (o *GetUsersYouSharedWithInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithInternalServerError %s", 500, payload)
}

func (o *GetUsersYouSharedWithInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/users/you-shared-with][%d] getUsersYouSharedWithInternalServerError %s", 500, payload)
}

func (o *GetUsersYouSharedWithInternalServerError) GetPayload() *GetUsersYouSharedWithInternalServerErrorBody {
	return o.Payload
}

func (o *GetUsersYouSharedWithInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUsersYouSharedWithInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetUsersYouSharedWithForbiddenBody get users you shared with forbidden body
swagger:model GetUsersYouSharedWithForbiddenBody
*/
type GetUsersYouSharedWithForbiddenBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get users you shared with forbidden body
func (o *GetUsersYouSharedWithForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get users you shared with forbidden body based on context it is used
func (o *GetUsersYouSharedWithForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersYouSharedWithForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersYouSharedWithForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetUsersYouSharedWithForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetUsersYouSharedWithInternalServerErrorBody get users you shared with internal server error body
swagger:model GetUsersYouSharedWithInternalServerErrorBody
*/
type GetUsersYouSharedWithInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get users you shared with internal server error body
func (o *GetUsersYouSharedWithInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get users you shared with internal server error body based on context it is used
func (o *GetUsersYouSharedWithInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersYouSharedWithInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersYouSharedWithInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetUsersYouSharedWithInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetUsersYouSharedWithOKBody get users you shared with o k body
swagger:model GetUsersYouSharedWithOKBody
*/
type GetUsersYouSharedWithOKBody struct {

	// users
	Users []*GetUsersYouSharedWithOKBodyUsersItems0 `json:"users"`
}

// Validate validates this get users you shared with o k body
func (o *GetUsersYouSharedWithOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUsers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUsersYouSharedWithOKBody) validateUsers(formats strfmt.Registry) error {
	if swag.IsZero(o.Users) { // not required
		return nil
	}

	for i := 0; i < len(o.Users); i++ {
		if swag.IsZero(o.Users[i]) { // not required
			continue
		}

		if o.Users[i] != nil {
			if err := o.Users[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getUsersYouSharedWithOK" + "." + "users" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getUsersYouSharedWithOK" + "." + "users" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get users you shared with o k body based on the context it is used
func (o *GetUsersYouSharedWithOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateUsers(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUsersYouSharedWithOKBody) contextValidateUsers(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Users); i++ {

		if o.Users[i] != nil {

			if swag.IsZero(o.Users[i]) { // not required
				return nil
			}

			if err := o.Users[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getUsersYouSharedWithOK" + "." + "users" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getUsersYouSharedWithOK" + "." + "users" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersYouSharedWithOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersYouSharedWithOKBody) UnmarshalBinary(b []byte) error {
	var res GetUsersYouSharedWithOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetUsersYouSharedWithOKBodyUsersItems0 get users you shared with o k body users items0
swagger:model GetUsersYouSharedWithOKBodyUsersItems0
*/
type GetUsersYouSharedWithOKBodyUsersItems0 struct {

	// email
	Email string `json:"email,omitempty"`
}

// Validate validates this get users you shared with o k body users items0
func (o *GetUsersYouSharedWithOKBodyUsersItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get users you shared with o k body users items0 based on context it is used
func (o *GetUsersYouSharedWithOKBodyUsersItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersYouSharedWithOKBodyUsersItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersYouSharedWithOKBodyUsersItems0) UnmarshalBinary(b []byte) error {
	var res GetUsersYouSharedWithOKBodyUsersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetUsersYouSharedWithUnauthorizedBody get users you shared with unauthorized body
swagger:model GetUsersYouSharedWithUnauthorizedBody
*/
type GetUsersYouSharedWithUnauthorizedBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get users you shared with unauthorized body
func (o *GetUsersYouSharedWithUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get users you shared with unauthorized body based on context it is used
func (o *GetUsersYouSharedWithUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersYouSharedWithUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersYouSharedWithUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetUsersYouSharedWithUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
